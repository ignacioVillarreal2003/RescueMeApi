spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST_NAME}
      port: ${REDIS_HOST_PORT}

jwt:
  secret: ${JWT_SECRET}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

rabbit:
  exchange:
    user-register: authapi.user.register.exchange
  queue:
    user-register-command: authapi.user.register.command.queue
    user-register-reply: authapi.user.register.reply.queue
    compensate-user-register-command: authapi.user.register.compensate.command.queue
  routing-key:
    user-register-command: authapi.user.register.command
    user-register-reply: authapi.user.register.reply
    compensate-user-register-command: authapi.user.register.compensate.command

media-api:
  url: ${MEDIA-API-URL}